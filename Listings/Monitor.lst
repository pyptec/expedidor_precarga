C51 COMPILER V9.59.0.0   MONITOR                                                           09/10/2021 16:23:10 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MONITOR
OBJECT MODULE PLACED IN .\Objects\Monitor.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Monitor.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\Monitor.lst) TABS(2) OBJECT(.\Objects\Monitor.obj)

line level    source

   1          
   2          #include <monitor.h>
   3          #include <reg51.h>
   4          #include <string.h>
   5          
   6          /*variables globales */
   7          extern unsigned char Timer_wait;
   8          extern unsigned char USE_LPR;
   9          extern unsigned char  Debug_Tibbo;
  10          extern unsigned char ValTimeOutCom;   
  11          extern unsigned char Tipo_Vehiculo;
  12          idata unsigned char placa[]={0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0};
  13          
  14          /*configuracion bits*/
  15          
  16          sbit rx_ip = P0^0;  
  17          sbit lock = P1^7;           //Relevo 
  18          sbit led_err_imp = P0^2;      //Error             
  19          /*externos bits*/
  20          
  21          extern bit placa_ready;
  22          
  23          /*funciones prototipo*/
  24          extern unsigned char rx_Data(void);
  25          extern unsigned char Dir_board();
  26          extern void serie_ascii_siceros_l(unsigned char *serie);
  27          extern void Block_read_clock_ascii(unsigned char *datos_clock);
  28          extern void DebugBufferMF(unsigned char *str,unsigned char num_char,char io);
  29          extern void tx_aux(unsigned char caracter);
  30          extern unsigned char hex_bcd (unsigned char byte);
  31          extern void serie_ascii_siceros_l(unsigned char *serie);
  32          extern unsigned char rd_eeprom (unsigned char control,unsigned int Dir) ;
  33          extern void Debug_monitor(unsigned char *buffer, unsigned char Length_trama );
  34          extern void Debug_txt_Tibbo(unsigned char * str);
  35          extern void Delay_10ms(unsigned int cntd_10ms);
  36          extern void tx_aux(unsigned char caracter);
  37          extern void Debug_Buffer_rs232_lcd(unsigned char *str,unsigned char num_char);
  38          
  39          #define True                    0x01
  40          #define False                   0x00
  41          
  42          #define STX                     02 
  43          #define ETX                     03 
  44          
  45          #define EE_USE_LPR              0x000A
  46          /*------------------------------------------------------------------------------
  47          el tiempo de espera por caracter recibido 
  48          rx_ip --> pin de recepcion de datos 
  49          time_out ----> bit de tiempo vencido
  50          contador ----> tiempo de espera del caracter
  51          ------------------------------------------------------------------------------*/
  52          unsigned Timer_monitor_char()
  53          {
  54   1      unsigned char time_out;
C51 COMPILER V9.59.0.0   MONITOR                                                           09/10/2021 16:23:10 PAGE 2   

  55   1      unsigned int contador;    
  56   1              contador=0;
  57   1              time_out=0;
  58   1              while ((rx_ip==1)&&(time_out==0))
  59   1              {
  60   2                contador++;
  61   2                if (contador>60000)
  62   2                {
  63   3                  time_out=1;
  64   3                }       
  65   2              }
  66   1              if(time_out==1)
  67   1              { 
  68   2                return False;
  69   2                
  70   2              }
  71   1              else
  72   1              {
  73   2              return True;
  74   2              }
  75   1          
  76   1      }
  77          /*------------------------------------------------------------------------------
  78          Rutina q recibe  los cmd de Monitor por el tibbo
  79          return el num de caracteres recibidos
  80          y almacena la trama en un apuntador
  81          la trama de placa inicia 0x02<xxxxxx>0x03
  82          02 41 03 cuando no hay placa
  83          06 ask el aceptado
  84          ------------------------------------------------------------------------------*/
  85          
  86          unsigned char recibe_cmd_Monitor(unsigned char *buffer_cmd)
  87          {
  88   1        unsigned char j, NumDatos,MaxChrRx;
  89   1        
  90   1        
  91   1          NumDatos=0;
  92   1          MaxChrRx=12;
  93   1          placa[0]=0x0;
  94   1        //if (USE_LPR==1)
  95   1        //{
  96   1      /*timer que espera el dato de monitor*/
  97   1              if (Timer_monitor_char() == False)
  98   1              {
  99   2                NumDatos= 0;
 100   2              }
 101   1              else
 102   1              {
 103   2              *buffer_cmd=rx_Data();
 104   2              
 105   2                /*valido el inicio del cmd*/
 106   2                if (*buffer_cmd == 0x02 )
 107   2                {
 108   3                  NumDatos++;
 109   3                  buffer_cmd++;
 110   3                  
 111   3                  for (j=1; j<MaxChrRx; j++)
 112   3                  {
 113   4                    if (Timer_monitor_char() == False)
 114   4                    {
 115   5                      break;
 116   5                    }
C51 COMPILER V9.59.0.0   MONITOR                                                           09/10/2021 16:23:10 PAGE 3   

 117   4                    else 
 118   4                    {
 119   5                      *buffer_cmd=rx_Data();
 120   5                      if (*buffer_cmd==ETX)
 121   5                      {
 122   6                        j=MaxChrRx;
 123   6                        NumDatos++;
 124   6                        buffer_cmd++;
 125   6                        buffer_cmd=0;
 126   6                        
 127   6                      }
 128   5                      else
 129   5                      {
 130   6                        NumDatos++;
 131   6                        buffer_cmd++;
 132   6                      }
 133   5                      
 134   5                    }
 135   4                  }
 136   3                }
 137   2                else if (*buffer_cmd == 0x06 )
 138   2                {
 139   3                  /*llego el ask*/
 140   3                  *buffer_cmd=0;
 141   3                }
 142   2                else
 143   2                {
 144   3                  /*no es 0x02 inicio de trama */
 145   3                  NumDatos= 0;
 146   3                  
 147   3                }
 148   2              
 149   2              }
 150   1              return NumDatos;
 151   1      }
 152          
 153          /*------------------------------------------------------------------------------
 154          Rutina q valida los cmd de Monitor
 155          ------------------------------------------------------------------------------*/
 156          
 157          void Valida_Trama_Monitor(unsigned char *buffer, unsigned char length_trama)
 158          {   
 159   1        unsigned char j=0;
 160   1        unsigned char p=2;
 161   1        unsigned char cont=0;
 162   1        length_trama=1;
 163   1          
 164   1            /*habilita relevo abre barrera*/
 165   1          if  ((*(buffer+1)=='P'))                                                                            /* APERTURA DE BARRETA*/ 
 166   1              {
 167   2              
 168   2                lock=1;   
 169   2                
 170   2                Delay_10ms(70);         /*habilita el relevo ON*/
 171   2                tx_aux(06);             //ack   
 172   2              
 173   2              }
 174   1            /*se recive la placa O EL CANCEL Y NO_PLATE*/ 
 175   1          else if ((*(buffer+1)=='<')|| (*(buffer+1)=='['))
 176   1          {
 177   2            /*placa 0 el cancel borra la fecha del mensual */
 178   2            do
C51 COMPILER V9.59.0.0   MONITOR                                                           09/10/2021 16:23:10 PAGE 4   

 179   2            {
 180   3              placa[j]=*(buffer+p);
 181   3              p++;
 182   3              j++;
 183   3            }while ((*(buffer+p) != ETX) && (*(buffer+p) != 0) );
 184   2            *(buffer+p)=0;
 185   2              placa[j-1]=0;
 186   2              placa_ready=1;
 187   2            ValTimeOutCom=10;
 188   2            led_err_imp = 0;
 189   2            
 190   2          }
 191   1          
 192   1        
 193   1      }
 194          void clear_placa()
 195          {
 196   1        unsigned char i;
 197   1        for(i=0;i<9;i++)
 198   1        {
 199   2         placa[i]=0x0;
 200   2        }
 201   1         placa_ready=0;
 202   1        led_err_imp = 1;
 203   1      }
 204          void Rx_Monitor()
 205          {
 206   1        unsigned char Length_trama;
 207   1        unsigned char buffer1[13];
 208   1          buffer1[0]=0;
 209   1          Length_trama=recibe_cmd_Monitor(buffer1);
 210   1          Debug_Buffer_rs232_lcd(buffer1,Length_trama);
 211   1          Debug_monitor(buffer1,Length_trama);
 212   1          Valida_Trama_Monitor(buffer1,Length_trama);
 213   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    598    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      29
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =      9    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
