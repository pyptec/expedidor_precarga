C51 COMPILER V9.59.0.0   MONITOR                                                           08/19/2020 11:02:09 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MONITOR
OBJECT MODULE PLACED IN .\Objects\Monitor.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Monitor.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\Monitor.lst) TABS(2) OBJECT(.\Objects\Monitor.obj)

line level    source

   1          
   2          #include <monitor.h>
   3          #include <reg51.h>
   4          #include <string.h>
   5          
   6          /*variables globales */
   7          extern unsigned char Timer_wait;
   8          extern unsigned char USE_LPR;
   9          extern unsigned char  Debug_Tibbo;
  10          extern unsigned char ValTimeOutCom;   
  11          extern unsigned char Tipo_Vehiculo;
  12          idata unsigned char placa[]={0x30,0x30,0x30,0x30,0x30,0x30,0x0,0x0,0x0};
  13          
  14          /*configuracion bits*/
  15          
  16          sbit rx_ip = P0^0;  
  17          sbit lock = P1^7;           //Relevo 
  18          
  19          /*externos bits*/
  20          
  21          extern bit placa_ready;
  22          
  23          /*funciones prototipo*/
  24          extern unsigned char rx_Data(void);
  25          extern unsigned char Dir_board();
  26          extern void serie_ascii_siceros_l(unsigned char *serie);
  27          extern void Block_read_clock_ascii(unsigned char *datos_clock);
  28          extern void DebugBufferMF(unsigned char *str,unsigned char num_char,char io);
  29          extern void tx_aux(unsigned char caracter);
  30          extern unsigned char hex_bcd (unsigned char byte);
  31          extern void serie_ascii_siceros_l(unsigned char *serie);
  32          extern unsigned char rd_eeprom (unsigned char control,unsigned int Dir) ;
  33          extern void Debug_monitor(unsigned char *buffer, unsigned char Length_trama );
  34          
  35          #define STX                     02 
  36          #define ETX                     03 
  37          
  38          #define EE_USE_LPR              0x000A
  39          /*------------------------------------------------------------------------------
  40          Rutina q recibe  los cmd de Monitor por el tibbo
  41          return el num de caracteres recibidos
  42          y almacena la trama en un apuntador
  43          ------------------------------------------------------------------------------*/
  44          unsigned char recibe_cmd_Monitor(unsigned char *buffer_cmd)
  45          {
  46   1        unsigned char j, NumDatos,time_out,MaxChrRx;
  47   1        unsigned int contador;
  48   1        
  49   1          NumDatos=0;
  50   1          MaxChrRx=11;
  51   1      
  52   1        if (USE_LPR==1)
  53   1        {
  54   2            for (j=0; j<MaxChrRx; j++)
C51 COMPILER V9.59.0.0   MONITOR                                                           08/19/2020 11:02:09 PAGE 2   

  55   2            {
  56   3              contador=0;
  57   3              time_out=0;
  58   3              while ((rx_ip==1)&&(time_out==0))
  59   3              {
  60   4                contador++;
  61   4                if (contador>65000)
  62   4                {
  63   5                  time_out=1;
  64   5                  j=MaxChrRx;
  65   5                }       
  66   4              }
  67   3              if(time_out==1)break;
  68   3                NumDatos++;
  69   3                *buffer_cmd=rx_Data();
  70   3                  buffer_cmd++;
  71   3            }
  72   2      
  73   2            *buffer_cmd=0;
  74   2            
  75   2      
  76   2        }
  77   1        return  NumDatos;
  78   1      } 
  79          /*------------------------------------------------------------------------------
  80          Rutina q valida los cmd de Monitor
  81          ------------------------------------------------------------------------------*/
  82          
  83          void Valida_Trama_Monitor(unsigned char *buffer, unsigned char length_trama)
  84          {   
  85   1        unsigned char j=0;
  86   1        unsigned char p=2;
  87   1        length_trama=1;
  88   1          if  ((*(buffer+2)==ETX)&&(*(buffer+1)=='P'))                                                                            /* APERTURA DE BARRETA
             -*/ 
  89   1              {
  90   2                lock=1;                                                                                                           /*habilita el relevo ON*/
  91   2                Timer_wait=0;
  92   2              }
  93   1          else if (*(buffer+1)=='<')
  94   1          {
  95   2            /*placa*/
  96   2            do
  97   2            {
  98   3              placa[j]=*(buffer+p);
  99   3              p++;
 100   3              j++;
 101   3            }while (*(buffer+p) != ETX);
 102   2            *(buffer+p)=0;
 103   2              placa[j-1]=0;
 104   2              placa_ready=1;
 105   2            ValTimeOutCom=10;
 106   2            /*placa no play <NO_PLATE>*/ 
 107   2            
 108   2          }
 109   1          else if (*(buffer+1)=='[')
 110   1          {
 111   2            /*cancel*/
 112   2          }
 113   1      }
 114          void clear_placa()
 115          {
C51 COMPILER V9.59.0.0   MONITOR                                                           08/19/2020 11:02:09 PAGE 3   

 116   1        unsigned char i;
 117   1        for(i=0;i<6;i++)
 118   1        {
 119   2         placa[i]=0x30;
 120   2        }
 121   1         placa_ready=0;
 122   1      }
 123          void Rx_Monitor()
 124          {
 125   1        unsigned char Length_trama;
 126   1        unsigned char buffer1[12];
 127   1          Length_trama=recibe_cmd_Monitor(buffer1);
 128   1          Debug_monitor(buffer1,Length_trama);
 129   1          Valida_Trama_Monitor(buffer1,Length_trama);
 130   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    404    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      25
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =      9    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
