C51 COMPILER V9.59.0.0   MONITOR                                                           09/02/2021 16:32:27 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MONITOR
OBJECT MODULE PLACED IN .\Objects\Monitor.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Monitor.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\Monitor.lst) TABS(2) OBJECT(.\Objects\Monitor.obj)

line level    source

   1          
   2          #include <monitor.h>
   3          #include <reg51.h>
   4          #include <string.h>
   5          
   6          /*variables globales */
   7          extern unsigned char Timer_wait;
   8          extern unsigned char USE_LPR;
   9          extern unsigned char  Debug_Tibbo;
  10          extern unsigned char ValTimeOutCom;   
  11          extern unsigned char Tipo_Vehiculo;
  12          idata unsigned char placa[]={0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0};
  13          
  14          /*configuracion bits*/
  15          
  16          sbit rx_ip = P0^0;  
  17          sbit lock = P1^7;           //Relevo 
  18          sbit led_err_imp = P0^2;      //Error             
  19          /*externos bits*/
  20          
  21          extern bit placa_ready;
  22          
  23          /*funciones prototipo*/
  24          extern unsigned char rx_Data(void);
  25          extern unsigned char Dir_board();
  26          extern void serie_ascii_siceros_l(unsigned char *serie);
  27          extern void Block_read_clock_ascii(unsigned char *datos_clock);
  28          extern void DebugBufferMF(unsigned char *str,unsigned char num_char,char io);
  29          extern void tx_aux(unsigned char caracter);
  30          extern unsigned char hex_bcd (unsigned char byte);
  31          extern void serie_ascii_siceros_l(unsigned char *serie);
  32          extern unsigned char rd_eeprom (unsigned char control,unsigned int Dir) ;
  33          extern void Debug_monitor(unsigned char *buffer, unsigned char Length_trama );
  34          extern void Debug_txt_Tibbo(unsigned char * str);
  35          extern void Delay_10ms(unsigned int cntd_10ms);
  36          extern void tx_aux(unsigned char caracter);
  37          extern void Debug_Buffer_rs232_lcd(unsigned char *str,unsigned char num_char);
  38          
  39          #define True                    0x01
  40          #define False                   0x00
  41          
  42          #define STX                     02 
  43          #define ETX                     03 
  44          
  45          #define EE_USE_LPR              0x000A
  46          /*------------------------------------------------------------------------------
  47          Rutina q recibe  los cmd de Monitor por el tibbo
  48          return el num de caracteres recibidos
  49          y almacena la trama en un apuntador
  50          ------------------------------------------------------------------------------*/
  51          unsigned char recibe_cmd_Monitor(unsigned char *buffer_cmd)
  52          {
  53   1        unsigned char j, NumDatos,time_out,MaxChrRx;
  54   1        unsigned int contador;
C51 COMPILER V9.59.0.0   MONITOR                                                           09/02/2021 16:32:27 PAGE 2   

  55   1        
  56   1          NumDatos=0;
  57   1          MaxChrRx=12;
  58   1          placa[0]=0x0;
  59   1        //if (USE_LPR==1)
  60   1        //{
  61   1            for (j=0; j<MaxChrRx; j++)
  62   1            {
  63   2              contador=0;
  64   2              time_out=0;
  65   2              while ((rx_ip==1)&&(time_out==0))
  66   2              {
  67   3                contador++;
  68   3                if (contador>60000)
  69   3                {
  70   4                  time_out=1;
  71   4                  j=MaxChrRx;
  72   4                }       
  73   3              }
  74   2              if(time_out==1)break;
  75   2                NumDatos++;
  76   2                
  77   2                *buffer_cmd=rx_Data();
  78   2                if (*buffer_cmd != 06)
  79   2                {
  80   3                  buffer_cmd++;
  81   3                }
  82   2            }
  83   1      
  84   1            *buffer_cmd=0;
  85   1            
  86   1      
  87   1        //}
  88   1        return  NumDatos;
  89   1      } 
  90          /*------------------------------------------------------------------------------
  91          Rutina q valida los cmd de Monitor
  92          ------------------------------------------------------------------------------*/
  93          
  94          void Valida_Trama_Monitor(unsigned char *buffer, unsigned char length_trama)
  95          {   
  96   1        unsigned char j=0;
  97   1        unsigned char p=2;
  98   1        unsigned char cont=0;
  99   1        length_trama=1;
 100   1          
 101   1            /*habilita relevo abre barrera*/
 102   1          if  ((*(buffer+1)=='P'))                                                                            /* APERTURA DE BARRETA*/ 
 103   1              {
 104   2              
 105   2                lock=1;   
 106   2                
 107   2                Delay_10ms(70);         /*habilita el relevo ON*/
 108   2                tx_aux(06);             //ack   
 109   2              
 110   2              }
 111   1            /*se recive la placa O EL CANCEL Y NO_PLATE*/ 
 112   1          else if ((*(buffer+1)=='<')|| (*(buffer+1)=='['))
 113   1          {
 114   2            /*placa 0 el cancel borra la fecha del mensual */
 115   2            do
 116   2            {
C51 COMPILER V9.59.0.0   MONITOR                                                           09/02/2021 16:32:27 PAGE 3   

 117   3              placa[j]=*(buffer+p);
 118   3              p++;
 119   3              j++;
 120   3            }while ((*(buffer+p) != ETX) && (*(buffer+p) != 0) );
 121   2            *(buffer+p)=0;
 122   2              placa[j-1]=0;
 123   2              placa_ready=1;
 124   2            ValTimeOutCom=10;
 125   2            led_err_imp = 0;
 126   2            
 127   2          }
 128   1          
 129   1        
 130   1      }
 131          void clear_placa()
 132          {
 133   1        unsigned char i;
 134   1        for(i=0;i<9;i++)
 135   1        {
 136   2         placa[i]=0x0;
 137   2        }
 138   1         placa_ready=0;
 139   1        led_err_imp = 1;
 140   1      }
 141          void Rx_Monitor()
 142          {
 143   1        unsigned char Length_trama;
 144   1        unsigned char buffer1[13];
 145   1          buffer1[0]=0;
 146   1          Length_trama=recibe_cmd_Monitor(buffer1);
 147   1          Debug_Buffer_rs232_lcd(buffer1,Length_trama);
 148   1          Debug_monitor(buffer1,Length_trama);
 149   1          Valida_Trama_Monitor(buffer1,Length_trama);
 150   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    479    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      29
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =      9    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
